{"version":3,"sources":["webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/pixelworks/lib/util.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/EventTarget.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./node_modules/ol/interaction/DragRotateAndZoom.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/interaction/Extent.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Translate.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/layer/Heatmap.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/layer/VectorTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/net.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/BingMaps.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/CartoDB.js","webpack:///./node_modules/ol/source/Cluster.js","webpack:///./node_modules/ol/reproj/Image.js","webpack:///./node_modules/ol/source/Image.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/source/ImageArcGISRest.js","webpack:///./node_modules/ol/source/ImageCanvas.js","webpack:///./node_modules/ol/source/ImageMapGuide.js","webpack:///./node_modules/ol/source/ImageStatic.js","webpack:///./node_modules/ol/source/WMSServerType.js","webpack:///./node_modules/ol/source/ImageWMS.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Raster.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./node_modules/ol/source/TileArcGISRest.js","webpack:///./node_modules/ol/source/TileDebug.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/source/TileWMS.js","webpack:///./node_modules/ol/source/UTFGrid.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/tilegrid/WMTS.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/source/Zoomify.js","webpack:///./node_modules/ol/style/Atlas.js","webpack:///./node_modules/ol/style/AtlasManager.js","webpack:///./node_modules/ol/style/Text.js","webpack:///src/views/map/openlayer/index.vue","webpack:///./src/views/map/openlayer/index.vue?b64f","webpack:///./src/views/map/openlayer/index.vue","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/pixelworks/lib/index.js","webpack:///./node_modules/pixelworks/lib/processor.js"],"names":["factory","swap","arr","i","j","tmp","defaultCompare","a","b","k","left","right","compare","quickselectStep","n","m","z","Math","log","s","exp","sd","sqrt","newLeft","max","floor","newRight","min","t","length","module","exports","hasImageData","ImageData","_","context","document","createElement","getContext","newImageData","data","width","height","imageData","createImageData","set","inherits","childCtor","parentCtor","prototype","Object","create","constructor","uidCounter_","getUid","obj","ol_uid","AssertionError","code","path","split","this","message","name","Error","ol_AssertionError","CollectionEventType","ObjectEventType","obj_assign","assign","target","var_sources","undefined","TypeError","output","ii","arguments","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","ol_lm","getListenerMap","removeListeners","removeEventListener","boundListener","keys","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","call","bindListener","listenOnce","unlisten","indexOf","splice","TRUE","FALSE","UNDEFINED","Disposable","disposed_","dispose","disposeInternal","ol_Disposable","Event","propagationStopped","stopPropagation","preventDefault","events_Event","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","index","events_EventTarget","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable","revision_","changed","getRevision","on","Array","isArray","len","once","un","ol_Observable","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","changeEventTypeCache","getChangeEventType","get","value","getKeys","getProperties","notify","eventType","opt_silent","unset","ol_Object","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","array","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","ol_Collection","MapEvent","map","opt_frameState","frameState","ol_MapEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ol_MapBrowserEvent","CONTEXT_IDS","MAX_TEXTURE_SIZE","EXTENSIONS","HAS","window","gl","canvas","opt_attributes","e","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserPointerEvent","pointer_EventType","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","prepareEvent","inEvent","cloneEvent","pd","pointerId","isPrimary","pointerType","isEventSimulatedFromTouch_","lts","x","clientX","y","clientY","l","dx","abs","dy","toString","cancel","down","move","p","button","up","cleanupMouse","enterOver","leaveOut","pointer_MouseSource","MsSource","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","pointer_MsSource","NativeSource","pointerdown","pointerDown","pointermove","pointerMove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","pointer_NativeSource","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","end","extension","equals","arr1","arr2","len1","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","slice","changedTouches","pointer","findTouch_","touchList","searchId","vacuumTouches_","d","out","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","found","array_remove","pointer_TouchSource","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","contains","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","assert","assertion","errorCode","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","Infinity","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","load","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","r","lerp","none","center","disable","rotation","delta","rotationconstraint_none","ViewHint","ANIMATING","INTERACTING","ViewProperty","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","closestOnSegment","segment","x0","y0","start","along","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","easeIn","pow","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","extent_isEmpty","getWidth","getHeight","getCenter","getForViewAndSize","resolution","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x3","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","transformExtent","projections2","forwardTransform","inverseTransform","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","transform_set","c","setFromArray","ol_transform_scale","transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","tmpTransform","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","SimpleGeometry","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","geom_SimpleGeometry","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing","maxDelta_","maxDeltaRevision_","linearRing","setFlatCoordinates","simplifiedLinearRing","geom_LinearRing","Point","geom_Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","isNaN","point1","point2","ret","intersectsLineString","coordinatesExtent","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedPolygon","geom_Polygon","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","makeRegular","getRadius","startAngle","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","properties","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","zoom","constrainResolution","Number","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","ol_View","createCanvasContext2D","opt_width","opt_height","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","layer_Property","BaseLayer","opacity","visible","zIndex","state_","layer","managed","getLayerState","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Base","State","Group_Property","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","collectionEvent","states","pos","ownLayerState","layerState","Group","size_buffer","num","size_scale","ratio","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","pixelRatio","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","style","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","hasArea","layerStatesArray","layerStates","pixelResolution","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","ol_PluggableMap","Control","target_","listenerKeys","getMap","control_Control","CLASS_HIDDEN","getFontFamilies","cache","font","family","fontFamily","render_EventType","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","visibleAtResolution","getSource","handleSourceChange_","layer_Layer","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","Attribution_render","renderedAttributions_","renderedVisible_","mapEvent","updateElement_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","control_Attribution","Rotate","add","callResetNorth_","resetNorth","Rotate_render","duration_","autoHide_","autoHide","rotation_","msTransform","webkitTransform","resetNorth_","control_Rotate","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","control_Zoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","Interaction","setActive","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","active","interaction_Interaction","DoubleClickZoom","delta_","stopEvent","interaction_DoubleClickZoom","altShiftKeysOnly","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","Pointer_handleEvent","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","trackedPointers_","targetPointers","Pointer_centroid","pointerEvents","updateTrackedPointers_","handledUp","handled","shouldStopEvent","isPointerDraggingEvent","Pointer","DragPan","DragPan_handleDownEvent","DragPan_handleDragEvent","DragPan_handleUpEvent","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragPan","DragRotate","DragRotate_handleDownEvent","DragRotate_handleDragEvent","DragRotate_handleUpEvent","lastAngle_","interaction_DragRotate","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","DragBox_handleDownEvent","DragBox_handleDragEvent","DragBox_handleUpEvent","box_","minArea_","minArea","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","onBoxEnd","interaction_DragBox","DragZoom","out_","mapExtent","boxPixelExtent","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","pan","interaction_KeyboardPan","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom","MouseWheelZoom_handleEvent","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate","PinchRotate_handleDownEvent","PinchRotate_handleDragEvent","PinchRotate_handleUpEvent","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom","PinchZoom_handleDownEvent","PinchZoom_handleDragEvent","PinchZoom_handleUpEvent","lastDistance_","lastScaleDelta_","scaleDelta","interaction_PinchZoom","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","result","format","formatConstructor","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","unregisterListeners_","text","readFeatures","DragRotateAndZoom","DragRotateAndZoom_handleDownEvent","DragRotateAndZoom_handleDragEvent","DragRotateAndZoom_handleUpEvent","lastMagnitude_","magnitude","angleDelta","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","el","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asColorLike","CanvasPattern","CanvasGradient","isColorLike","ImageState","IDLE","LOADING","LOADED","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","structs_LRUCache","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","margin","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","snapToPixel_","snapToPixel","getRotateWithView","getScale","getSnapToPixel","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","listenImageChange","thisArg","unlistenImageChange","style_Image","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getFill","getPoints","getRadius2","getStroke","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","style_RegularShape","CircleStyle","setRadius","Circle","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","style_Style","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","ol_Feature","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","binarySearch","o","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","simplifiedLineString","geom_LineString","MultiLineString","appendLineString","multiLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","simplifiedMultiLineString","intersectsLineStringArray","setLineStrings","geom_MultiLineString","MultiPoint","appendPoint","multiPoint","getPoint","geom_MultiPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","multiPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","polygons","intersectsLinearRingMultiArray","opt_endss","deflateMultiCoordinatesArray","lastEnds","setPolygons","geom_MultiPolygon","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","Vector_Property","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","getRenderMode","Vector","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","getLastExtent","onerror","send","loadFeaturesXhr","dataProjection","loadingstrategy_all","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","setState","source_Source","VectorEventType","RBush","opt_maxEntries","rbush_","rbush_default","items_","insert","extents","items","uid","getAll","all","getInExtent","bbox","search","forEach_","forEachInExtent","rbush","structs_RBush","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","source_Vector","Draw_Mode","DrawEventType","DrawEvent","Draw","Draw_handleDownEvent","Draw_handleEvent","Draw_handleUpEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","interaction_Draw","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","Extent_handleDownEvent","Extent_handleDragEvent","Extent_handleEvent","Extent_handleUpEvent","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","vertex","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","pixelCoordinate","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","sortByDistance","segments","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdateExtentFeature_","extentFeature","vertexFeature","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","Modify_handleDownEvent","Modify_handleDragEvent","Modify_handleEvent","Modify_handleUpEvent","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","Modify_getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","depth","join","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","lines","rings","kk","geometries","getGeometriesArray","box","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","Select_handleEvent","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","Select_getDefaultStyleFunction","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","Snap","Snap_handleEvent","Snap_handleUpEvent","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","snapTo","snapped","featuresToUpdate","updateFeature_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","snappedToVertex","isCircle","closestOnCircle","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","Translate_handleDownEvent","Translate_handleDragEvent","Translate_handleMoveEvent","Translate_handleUpEvent","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","oldMap","ImageBase","getPixelRatio","ol_ImageBase","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","ol_ImageCanvas","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","render_Event","VectorContext","drawCustom","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","sortByZIndex","state1","state2","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","det","mat","invert","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","ceil","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","Map","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","compareFnc","stableSort","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","canvas_Map","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","renderer_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","canvas_Layer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","getImageData","IntermediateCanvas","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","mapRenderer","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","CanvasTileLayerRenderer","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","getGutter","tileCoordKey","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","endTransition","TileLayer","ReplayGroup","getReplay","replayType","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","Replay_tmpExtent","Replay_tmpTransform","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayBegin","replayEndss","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","ImageReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextPlacement","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BATCH_CONSTRUCTORS","Default","Image","Text","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","0","fillCircleArrayRowToMiddle","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","contextSize","hitExtent","mask","arraySize","error","getCircleArray","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","getGeometries","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","canvas_VectorLayer","VectorTileRenderType","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","ol_Map","OverlayPositioning","Overlay_Property","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","dom_outerWidth","marginTop","marginBottom","dom_outerHeight","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","ol_Overlay","IconAnchorUnits","IconImage","imageListenerKeys_","imageState_","src_","tainting_","determineTainting_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","iconImageSize","style_Icon","Heatmap_Property","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","Image_ImageLayer","layer_Image","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","Tile","VectorTile_VectorTileLayer","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tileurlfunction_createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","String","fromCharCode","stop","net_jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","Tile_Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ol_ImageTile","TileCache","pruneExceptNewestZ","fromKey","ol_TileCache","calculateSourceResolution","sourceProj","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","TileGrid","opt_func","opt_strict","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","tmpTileCoord","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createForExtent","extentFromProjection","createForProjection","createXYZ","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","worldsAway","tilegrid_wrapX","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","opt_key","source_UrlTile","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","imageTile","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","source_TileImage","BingMaps","hidpi_","hidpi","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","source_XYZ","CartoDB","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","parse","tilesUrl","cdn_url","https","layergroupid","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ReprojImage","getImageFunction","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","reproj_Image","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","defaultImageLoadFunction","findNearestResolution","idx","getImageInternal","handleImageChange","source_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","ol_Image","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","VERSION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","Static","targetWidth","WMSServerType","ImageWMS","v13_","updateV13_","serverType_","GETFEATUREINFO_IMAGE_SIZE","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","version","ATTRIBUTION","OSM","source_OSM","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","threads_","threads","renderers_","renderers","createRenderers","requestedFrameState_","renderedImageCanvas_","operation","setOperation","lib","opt_lib","imageOps","queue","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","process","onWorkerComplete_","sharedContext","createTileRenderer","createImageRenderer","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","Stamen","provider","providerConfig","layerConfig","TileArcGISRest","tmpExtent_","getKeyForParams_","LabeledTile","strokeRect","TileDebug","textTileCoord","TileJSON","tileJSON_","jsonp","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","bounds","minzoom","maxzoom","attributionExtent","TileWMS","transparent","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","grid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","WMTSRequestEncoding","KVP","REST","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","WMTS_WMTS","version_","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","requestEncoding","tilematrixset","Service","Request","Version","Format","createFromWMTSTemplate_","localContext","TileMatrix","TileCol","TileRow","getKeyForDimensions_","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","TierSizeCalculation","Zoomify_CustomTile","zoomifyImage_","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__webpack_require__","then","openlayer","sketch","helpTooltipElement","helpTooltip","measureTooltipElement","measureTooltip","helpMsg","line","sphere_getArea","draw","createMeasureTooltip","createHelpTooltip","tooltipCoord","initMap","map_openlayer","_h","$createElement","_c","_self","attrs","_v","_s","_m","staticRenderFns","staticClass","Component","normalizeComponent","ssrContext","__webpack_exports__","default","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","Processor","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","onMessage","blob","Blob","URL","createObjectURL","worker","Worker","_imageOps","workers","_onWorkerMessage","minion","postMessage","createFauxWorker","_workers","_queue","_maxQueueLength","_running","_dataLookup","_job","inputs","_enqueue","_dispatch","destroy","_destroyed","job","shift","slices","_resolveJob"],"mappings":"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","file":"static/js/5.b69362d56321664dff89.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/quickselect/quickselect.js\n// module id = SpdK\n// module chunks = 5","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pixelworks/lib/util.js\n// module id = YdxN\n// module chunks = 5","/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '5.0.3';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/util.js\n// module id = null\n// module chunks = ","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION.split('-')[0];\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/AssertionError.js\n// module id = null\n// module chunks = ","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/CollectionEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ObjectEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/obj.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events.js\n// module id = null\n// module chunks = ","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/functions.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Disposable.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/Event.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/EventTarget.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/EventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Observable\n */\nimport {inherits} from './util.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Observable.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Object.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Collection\n */\nimport {inherits} from './util.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Collection.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './util.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapEvent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './util.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserEvent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const ol/has.WEBGL\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/webgl.js\n// module id = null\n// module chunks = ","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/has.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './util.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserPointerEvent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/EventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/EventSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/MouseSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/MsSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/NativeSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/PointerEvent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/array.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/TouchSource.js\n// module id = null\n// module chunks = ","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/pointer/PointerEventHandler.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './util.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapBrowserEventHandler.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/MapProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileState.js\n// module id = null\n// module chunks = ","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/asserts.js\n// module id = null\n// module chunks = ","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/PriorityQueue.js\n// module id = null\n// module chunks = ","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileQueue.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid/common.js\n// module id = null\n// module chunks = ","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/math.js\n// module id = null\n// module chunks = ","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/centerconstraint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/rotationconstraint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ViewHint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ViewProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/string.js\n// module id = null\n// module chunks = ","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/coordinate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/easing.js\n// module id = null\n// module chunks = ","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/extent/Corner.js\n// module id = null\n// module chunks = ","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/extent/Relationship.js\n// module id = null\n// module chunks = ","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/extent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/GeometryType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/GeometryLayout.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/transform.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/sphere.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/Units.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/Projection.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../util.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/epsg3857.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../util.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/epsg4326.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/projections.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj/transforms.js\n// module id = null\n// module chunks = ","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/proj.js\n// module id = null\n// module chunks = ","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/transform.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Geometry.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../util.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/SimpleGeometry.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/area.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/closest.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/deflate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/inflate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/simplify.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../util.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/LinearRing.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Point.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/interiorpoint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/segments.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/intersectsextent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/reverse.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/orient.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Polygon.js\n// module id = null\n// module chunks = ","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid, inherits} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/View.js\n// module id = null\n// module chunks = ","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/resolutionconstraint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/dom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Property.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Base.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/State.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Group.js\n// module id = null\n// module chunks = ","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/size.js\n// module id = null\n// module chunks = ","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer();\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const options = opt_options || {};\n  const hitTolerance = options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = options.layerFilter || TRUE;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/PluggableMap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Control.js\n// module id = null\n// module chunks = ","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/css.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/EventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Layer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../util.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Attribution.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Rotate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/Zoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Kinetic.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Property.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Interaction.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../util.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DoubleClickZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/condition.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../util.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Pointer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragPan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragRotate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/Box.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../util.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragBox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../util.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/events/KeyCode.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../util.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/KeyboardPan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/KeyboardZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/MouseWheelZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/PinchRotate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/PinchZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../util.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragAndDrop.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/DragRotateAndZoom.js\n// module id = null\n// module chunks = ","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/color.js\n// module id = null\n// module chunks = ","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/colorlike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageState.js\n// module id = null\n// module chunks = ","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/LRUCache.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../util.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/RegularShape.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../util.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Circle.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Fill.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Stroke.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Style.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './util.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Feature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/Circle.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/interpolate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/length.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/LineString.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/MultiLineString.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/MultiPoint.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/MultiPolygon.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/center.js\n// module id = null\n// module chunks = ","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/LayerType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/VectorRenderType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Vector.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/format/FormatType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/featureloader.js\n// module id = null\n// module chunks = ","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/loadingstrategy.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Source.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/VectorEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/structs/RBush.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Vector.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Extent.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Select.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Snap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/common.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './util.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageBase.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageCanvas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/Event.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/VectorContext.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/Immediate.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconImageCache.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/Map.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../util.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/Map.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/Layer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/Layer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\nexport default IntermediateCanvasRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/IntermediateCanvas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/ImageLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileRange.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/TileLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/ReplayGroup.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/ReplayType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/textpath.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/Instruction.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/replay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/Replay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/ImageReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/LineStringReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../util.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  if (fill) {\n    this.instructions.push(fillInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/PolygonReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/geom/flat/straightchunk.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/TextPlacement.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/TextReplay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/render/canvas/ReplayGroup.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/vector.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/VectorLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/VectorTileRenderType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const renderMode = layer.getRenderMode();\n  if (renderMode != VectorTileRenderType.IMAGE) {\n    const declutterReplays = layer.getDeclutter() ? {} : null;\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const pixelRatio = frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const size = frameState.size;\n    let offsetX, offsetY;\n    if (rotation) {\n      offsetX = Math.round(pixelRatio * size[0] / 2);\n      offsetY = Math.round(pixelRatio * size[1] / 2);\n      rotateAtOffset(context, -rotation, offsetX, offsetY);\n    }\n    if (declutterReplays) {\n      this.declutterTree_.clear();\n    }\n    const tiles = this.renderedTiles;\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    const clips = [];\n    const zs = [];\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n      if (tile.getState() == TileState.ABORT) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n      const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n      let transform = undefined;\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n        if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n          // sourceTile was not yet loaded when this.createReplayGroup_() was\n          // called, or it has no replays of the types we want to render\n          continue;\n        }\n        if (!transform) {\n          transform = this.getTransform(frameState, worldOffset);\n        }\n        const currentZ = sourceTile.tileCoord[0];\n        const currentClip = replayGroup.getClipCoords(transform);\n        context.save();\n        context.globalAlpha = layerState.opacity;\n        // Create a clip mask for regions in this low resolution tile that are\n        // already filled by a higher resolution tile\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          const clip = clips[j];\n          if (currentZ < zs[j]) {\n            context.beginPath();\n            // counter-clockwise (outer ring) for current tile\n            context.moveTo(currentClip[0], currentClip[1]);\n            context.lineTo(currentClip[2], currentClip[3]);\n            context.lineTo(currentClip[4], currentClip[5]);\n            context.lineTo(currentClip[6], currentClip[7]);\n            // clockwise (inner ring) for higher resolution tile\n            context.moveTo(clip[6], clip[7]);\n            context.lineTo(clip[4], clip[5]);\n            context.lineTo(clip[2], clip[3]);\n            context.lineTo(clip[0], clip[1]);\n            context.clip();\n          }\n        }\n        replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n        context.restore();\n        clips.push(currentClip);\n        zs.push(currentZ);\n      }\n    }\n    if (declutterReplays) {\n      replayDeclutter(declutterReplays, context, rotation);\n    }\n    if (rotation) {\n      rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n    }\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/renderer/canvas/VectorTileLayer.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Map\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Map.js\n// module id = null\n// module chunks = ","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/control/util.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/interaction.js\n// module id = null\n// module chunks = ","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/OverlayPositioning.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Overlay\n */\nimport {inherits} from './util.js';\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {Element} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Overlay~Options} options Overlay options.\n * @api\n */\nconst Overlay = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~Options}\n   */\n  this.options = options;\n\n  /**\n   * @protected\n   * @type {number|string|undefined}\n   */\n  this.id = options.id;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.insertFirst = options.insertFirst !== undefined ?\n    options.insertFirst : true;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = document.createElement('DIV');\n  this.element.className = options.className !== undefined ?\n    options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n  this.element.style.position = 'absolute';\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~PanOptions}\n   */\n  this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.autoPanMargin = options.autoPanMargin !== undefined ?\n    options.autoPanMargin : 20;\n\n  /**\n   * @protected\n   * @type {{bottom_: string,\n   *         left_: string,\n   *         right_: string,\n   *         top_: string,\n   *         visible: boolean}}\n   */\n  this.rendered = {\n    bottom_: '',\n    left_: '',\n    right_: '',\n    top_: '',\n    visible: true\n  };\n\n  /**\n   * @protected\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPostrenderListenerKey = null;\n\n  listen(\n    this, getChangeEventType(Property.ELEMENT),\n    this.handleElementChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.MAP),\n    this.handleMapChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.OFFSET),\n    this.handleOffsetChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITION),\n    this.handlePositionChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITIONING),\n    this.handlePositioningChanged, this);\n\n  if (options.element !== undefined) {\n    this.setElement(options.element);\n  }\n\n  this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n  this.setPositioning(options.positioning !== undefined ?\n    /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n    OverlayPositioning.TOP_LEFT);\n\n  if (options.position !== undefined) {\n    this.setPosition(options.position);\n  }\n\n};\n\ninherits(Overlay, BaseObject);\n\n\n/**\n * Get the DOM element of this overlay.\n * @return {Element|undefined} The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.getElement = function() {\n  return /** @type {Element|undefined} */ (this.get(Property.ELEMENT));\n};\n\n\n/**\n * Get the overlay identifier which is set on constructor.\n * @return {number|string|undefined} Id.\n * @api\n */\nOverlay.prototype.getId = function() {\n  return this.id;\n};\n\n\n/**\n * Get the map associated with this overlay.\n * @return {module:ol/PluggableMap|undefined} The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.getMap = function() {\n  return (\n    /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n  );\n};\n\n\n/**\n * Get the offset of this overlay.\n * @return {Array.<number>} The offset.\n * @observable\n * @api\n */\nOverlay.prototype.getOffset = function() {\n  return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n};\n\n\n/**\n * Get the current position of this overlay.\n * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n *     anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n  );\n};\n\n\n/**\n * Get the current positioning of this overlay.\n * @return {module:ol/OverlayPositioning} How the overlay is positioned\n *     relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.getPositioning = function() {\n  return (\n    /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n  );\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleElementChanged = function() {\n  removeChildren(this.element);\n  const element = this.getElement();\n  if (element) {\n    this.element.appendChild(element);\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleMapChanged = function() {\n  if (this.mapPostrenderListenerKey) {\n    removeNode(this.element);\n    unlistenByKey(this.mapPostrenderListenerKey);\n    this.mapPostrenderListenerKey = null;\n  }\n  const map = this.getMap();\n  if (map) {\n    this.mapPostrenderListenerKey = listen(map,\n      MapEventType.POSTRENDER, this.render, this);\n    this.updatePixelPosition();\n    const container = this.stopEvent ?\n      map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n    if (this.insertFirst) {\n      container.insertBefore(this.element, container.childNodes[0] || null);\n    } else {\n      container.appendChild(this.element);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.render = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleOffsetChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositionChanged = function() {\n  this.updatePixelPosition();\n  if (this.get(Property.POSITION) && this.autoPan) {\n    this.panIntoView();\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositioningChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * Set the DOM element to be associated with this overlay.\n * @param {Element|undefined} element The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.setElement = function(element) {\n  this.set(Property.ELEMENT, element);\n};\n\n\n/**\n * Set the map to be associated with this overlay.\n * @param {module:ol/PluggableMap|undefined} map The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.setMap = function(map) {\n  this.set(Property.MAP, map);\n};\n\n\n/**\n * Set the offset for this overlay.\n * @param {Array.<number>} offset Offset.\n * @observable\n * @api\n */\nOverlay.prototype.setOffset = function(offset) {\n  this.set(Property.OFFSET, offset);\n};\n\n\n/**\n * Set the position for this overlay. If the position is `undefined` the\n * overlay is hidden.\n * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n *     is anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.setPosition = function(position) {\n  this.set(Property.POSITION, position);\n};\n\n\n/**\n * Pan the map so that the overlay is entirely visible in the current viewport\n * (if necessary).\n * @protected\n */\nOverlay.prototype.panIntoView = function() {\n  const map = this.getMap();\n\n  if (!map || !map.getTargetElement()) {\n    return;\n  }\n\n  const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n  const element = /** @type {!Element} */ (this.getElement());\n  const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n  const margin = this.autoPanMargin;\n  if (!containsExtent(mapRect, overlayRect)) {\n    // the overlay is not completely inside the viewport, so pan the map\n    const offsetLeft = overlayRect[0] - mapRect[0];\n    const offsetRight = mapRect[2] - overlayRect[2];\n    const offsetTop = overlayRect[1] - mapRect[1];\n    const offsetBottom = mapRect[3] - overlayRect[3];\n\n    const delta = [0, 0];\n    if (offsetLeft < 0) {\n      // move map to the left\n      delta[0] = offsetLeft - margin;\n    } else if (offsetRight < 0) {\n      // move map to the right\n      delta[0] = Math.abs(offsetRight) + margin;\n    }\n    if (offsetTop < 0) {\n      // move map up\n      delta[1] = offsetTop - margin;\n    } else if (offsetBottom < 0) {\n      // move map down\n      delta[1] = Math.abs(offsetBottom) + margin;\n    }\n\n    if (delta[0] !== 0 || delta[1] !== 0) {\n      const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n      const centerPx = map.getPixelFromCoordinate(center);\n      const newCenterPx = [\n        centerPx[0] + delta[0],\n        centerPx[1] + delta[1]\n      ];\n\n      map.getView().animate({\n        center: map.getCoordinateFromPixel(newCenterPx),\n        duration: this.autoPanAnimation.duration,\n        easing: this.autoPanAnimation.easing\n      });\n    }\n  }\n};\n\n\n/**\n * Get the extent of an element relative to the document\n * @param {Element|undefined} element The element.\n * @param {module:ol/size~Size|undefined} size The size of the element.\n * @return {module:ol/extent~Extent} The extent.\n * @protected\n */\nOverlay.prototype.getRect = function(element, size) {\n  const box = element.getBoundingClientRect();\n  const offsetX = box.left + window.pageXOffset;\n  const offsetY = box.top + window.pageYOffset;\n  return [\n    offsetX,\n    offsetY,\n    offsetX + size[0],\n    offsetY + size[1]\n  ];\n};\n\n\n/**\n * Set the positioning for this overlay.\n * @param {module:ol/OverlayPositioning} positioning how the overlay is\n *     positioned relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.setPositioning = function(positioning) {\n  this.set(Property.POSITIONING, positioning);\n};\n\n\n/**\n * Modify the visibility of the element.\n * @param {boolean} visible Element visibility.\n * @protected\n */\nOverlay.prototype.setVisible = function(visible) {\n  if (this.rendered.visible !== visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.rendered.visible = visible;\n  }\n};\n\n\n/**\n * Update pixel position.\n * @protected\n */\nOverlay.prototype.updatePixelPosition = function() {\n  const map = this.getMap();\n  const position = this.getPosition();\n  if (!map || !map.isRendered() || !position) {\n    this.setVisible(false);\n    return;\n  }\n\n  const pixel = map.getPixelFromCoordinate(position);\n  const mapSize = map.getSize();\n  this.updateRenderedPosition(pixel, mapSize);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel The pixel location.\n * @param {module:ol/size~Size|undefined} mapSize The map size.\n * @protected\n */\nOverlay.prototype.updateRenderedPosition = function(pixel, mapSize) {\n  const style = this.element.style;\n  const offset = this.getOffset();\n\n  const positioning = this.getPositioning();\n\n  this.setVisible(true);\n\n  let offsetX = offset[0];\n  let offsetY = offset[1];\n  if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT) {\n    if (this.rendered.left_ !== '') {\n      this.rendered.left_ = style.left = '';\n    }\n    const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n    if (this.rendered.right_ != right) {\n      this.rendered.right_ = style.right = right;\n    }\n  } else {\n    if (this.rendered.right_ !== '') {\n      this.rendered.right_ = style.right = '';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      offsetX -= this.element.offsetWidth / 2;\n    }\n    const left = Math.round(pixel[0] + offsetX) + 'px';\n    if (this.rendered.left_ != left) {\n      this.rendered.left_ = style.left = left;\n    }\n  }\n  if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT) {\n    if (this.rendered.top_ !== '') {\n      this.rendered.top_ = style.top = '';\n    }\n    const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n    if (this.rendered.bottom_ != bottom) {\n      this.rendered.bottom_ = style.bottom = bottom;\n    }\n  } else {\n    if (this.rendered.bottom_ !== '') {\n      this.rendered.bottom_ = style.bottom = '';\n    }\n    if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      offsetY -= this.element.offsetHeight / 2;\n    }\n    const top = Math.round(pixel[1] + offsetY) + 'px';\n    if (this.rendered.top_ != top) {\n      this.rendered.top_ = style.top = top;\n    }\n  }\n};\n\n\n/**\n * returns the options this Overlay has been created with\n * @return {module:ol/Overlay~Options} overlay options\n */\nOverlay.prototype.getOptions = function() {\n  return this.options;\n};\n\nexport default Overlay;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Overlay.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconAnchorUnits.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/IconImage\n */\nimport {inherits} from '../util.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @extends {module:ol/events/EventTarget}\n */\nconst IconImage = function(image, src, size, crossOrigin, imageState, color) {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == ImageState.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\ninherits(IconImage, EventTarget);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\n/**\n * @private\n */\nIconImage.prototype.determineTainting_ = function() {\n  const context = createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageError_ = function() {\n  this.imageState_ = ImageState.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageLoad_ = function() {\n  this.imageState_ = ImageState.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\nIconImage.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {module:ol/ImageState} Image state.\n */\nIconImage.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\nIconImage.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      const width = this.size_[0];\n      const height = this.size_[1];\n      const context = createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {module:ol/size~Size} Image size.\n */\nIconImage.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\nIconImage.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\nIconImage.prototype.load = function() {\n  if (this.imageState_ == ImageState.IDLE) {\n    this.imageState_ = ImageState.LOADING;\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  const ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  const data = imgData.data;\n  const r = this.color_[0] / 255.0;\n  const g = this.color_[1] / 255.0;\n  const b = this.color_[2] / 255.0;\n\n  for (let i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nIconImage.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default IconImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconImage.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/IconOrigin.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Icon\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Image|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Icon~Options=} opt_options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst Icon = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  const image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {module:ol/size~Size}\n   */\n  const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  let src = options.src;\n\n  assert(!(src !== undefined && image),\n    4); // `image` and `src` cannot be provided at the same time\n  assert(!image || (image && imgSize),\n    5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || getUid(image).toString();\n  }\n  assert(src !== undefined && src.length > 0,\n    6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {module:ol/ImageState}\n   */\n  const imageState = options.src !== undefined ?\n    ImageState.IDLE : ImageState.LOADED;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconImage}\n   */\n  this.iconImage_ = getIconImage(\n    image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  const scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  ImageStyle.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\ninherits(Icon, ImageStyle);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {module:ol/style/Icon} The cloned style.\n * @api\n */\nIcon.prototype.clone = function() {\n  return new Icon({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  let anchor = this.anchor_;\n  const size = this.getSize();\n  if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nIcon.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\nIcon.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  let offset = this.offset_;\n\n  if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n    const size = this.getSize();\n    const iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\nIcon.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\nIcon.prototype.listenImageChange = function(listener, thisArg) {\n  return listen(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\nIcon.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.unlistenImageChange = function(listener, thisArg) {\n  unlisten(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\nexport default Icon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Icon.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Heatmap~Options=} opt_options Options.\n * @api\n */\nconst Heatmap = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.gradient;\n  delete baseOptions.radius;\n  delete baseOptions.blur;\n  delete baseOptions.shadow;\n  delete baseOptions.weight;\n  VectorLayer.call(this, /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {Uint8ClampedArray}\n   */\n  this.gradient_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.circleImage_ = undefined;\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/style/Style>>}\n   */\n  this.styleCache_ = null;\n\n  listen(this,\n    getChangeEventType(Property.GRADIENT),\n    this.handleGradientChanged_, this);\n\n  this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n  this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n  this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n  listen(this,\n    getChangeEventType(Property.BLUR),\n    this.handleStyleChanged_, this);\n  listen(this,\n    getChangeEventType(Property.RADIUS),\n    this.handleStyleChanged_, this);\n\n  this.handleStyleChanged_();\n\n  const weight = options.weight ? options.weight : 'weight';\n  let weightFunction;\n  if (typeof weight === 'string') {\n    weightFunction = function(feature) {\n      return feature.get(weight);\n    };\n  } else {\n    weightFunction = weight;\n  }\n\n  this.setStyle(function(feature, resolution) {\n    const weight = weightFunction(feature);\n    const opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n    // cast to 8 bits\n    const index = (255 * opacity) | 0;\n    let style = this.styleCache_[index];\n    if (!style) {\n      style = [\n        new Style({\n          image: new Icon({\n            opacity: opacity,\n            src: this.circleImage_\n          })\n        })\n      ];\n      this.styleCache_[index] = style;\n    }\n    return style;\n  }.bind(this));\n\n  // For performance reasons, don't sort the features before rendering.\n  // The render order is not relevant for a heatmap representation.\n  this.setRenderOrder(null);\n\n  listen(this, RenderEventType.RENDER, this.handleRender_, this);\n};\n\ninherits(Heatmap, VectorLayer);\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n * @private\n */\nconst createGradient = function(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n};\n\n\n/**\n * @return {string} Data URL for a circle.\n * @private\n */\nHeatmap.prototype.createCircle_ = function() {\n  const radius = this.getRadius();\n  const blur = this.getBlur();\n  const halfSize = radius + blur + 1;\n  const size = 2 * halfSize;\n  const context = createCanvasContext2D(size, size);\n  context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n  context.shadowBlur = blur;\n  context.shadowColor = '#000';\n  context.beginPath();\n  const center = halfSize - this.shadow_;\n  context.arc(center, center, radius, 0, Math.PI * 2, true);\n  context.fill();\n  return context.canvas.toDataURL();\n};\n\n\n/**\n * Return the blur size in pixels.\n * @return {number} Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.getBlur = function() {\n  return /** @type {number} */ (this.get(Property.BLUR));\n};\n\n\n/**\n * Return the gradient colors as array of strings.\n * @return {Array.<string>} Colors.\n * @api\n * @observable\n */\nHeatmap.prototype.getGradient = function() {\n  return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n};\n\n\n/**\n * Return the size of the radius in pixels.\n * @return {number} Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.getRadius = function() {\n  return /** @type {number} */ (this.get(Property.RADIUS));\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleGradientChanged_ = function() {\n  this.gradient_ = createGradient(this.getGradient());\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleStyleChanged_ = function() {\n  this.circleImage_ = this.createCircle_();\n  this.styleCache_ = new Array(256);\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/render/Event} event Post compose event\n * @private\n */\nHeatmap.prototype.handleRender_ = function(event) {\n  const context = event.context;\n  const canvas = context.canvas;\n  const image = context.getImageData(0, 0, canvas.width, canvas.height);\n  const view8 = image.data;\n  for (let i = 0, ii = view8.length; i < ii; i += 4) {\n    const alpha = view8[i + 3] * 4;\n    if (alpha) {\n      view8[i] = this.gradient_[alpha];\n      view8[i + 1] = this.gradient_[alpha + 1];\n      view8[i + 2] = this.gradient_[alpha + 2];\n    }\n  }\n  context.putImageData(image, 0, 0);\n};\n\n\n/**\n * Set the blur size in pixels.\n * @param {number} blur Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.setBlur = function(blur) {\n  this.set(Property.BLUR, blur);\n};\n\n\n/**\n * Set the gradient colors as array of strings.\n * @param {Array.<string>} colors Gradient.\n * @api\n * @observable\n */\nHeatmap.prototype.setGradient = function(colors) {\n  this.set(Property.GRADIENT, colors);\n};\n\n\n/**\n * Set the size of the radius in pixels.\n * @param {number} radius Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.setRadius = function(radius) {\n  this.set(Property.RADIUS, radius);\n};\n\nexport default Heatmap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Heatmap.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Image\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n * @api\n */\nconst ImageLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.IMAGE;\n\n};\n\ninherits(ImageLayer, Layer);\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/TileProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/Tile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/layer/VectorTile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nconst VectorTileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n  assert(renderMode == undefined ||\n      renderMode == VectorTileRenderType.IMAGE ||\n      renderMode == VectorTileRenderType.HYBRID ||\n      renderMode == VectorTileRenderType.VECTOR,\n  28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n  if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n    renderMode = VectorTileRenderType.HYBRID;\n  }\n  options.renderMode = renderMode;\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  VectorLayer.call(this,  /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  this.setPreload(options.preload ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR_TILE;\n\n};\n\ninherits(VectorTileLayer, VectorLayer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/layer/VectorTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilecoord.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tileurlfunction.js\n// module id = null\n// module chunks = ","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/net.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Tile\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Tile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/ImageTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/TileCache\n */\nimport {inherits} from './util.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/TileCache.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/Triangulation.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/Tile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid/TileGrid.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Tile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/UrlTile.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileImage.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/BingMaps\n */\nimport {inherits} from '../util.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/BingMaps~Options=} options Bing Maps options.\n * @api\n */\nconst BingMaps = function(options) {\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : false;\n\n  TileImage.call(this, {\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    opaque: true,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: this.hidpi_ ? 2 : 1,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.apiKey_ = options.key;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.imagerySet_ = options.imagerySet;\n\n  const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n      '&c=' + this.culture_;\n\n  requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n    'jsonp');\n\n};\n\ninherits(BingMaps, TileImage);\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * Get the api key used for this source.\n *\n * @return {string} The api key.\n * @api\n */\nBingMaps.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * Get the imagery set associated with this source.\n *\n * @return {string} The imagery set.\n * @api\n */\nBingMaps.prototype.getImagerySet = function() {\n  return this.imagerySet_;\n};\n\n\n/**\n * @param {BingMapsImageryMetadataResponse} response Response.\n */\nBingMaps.prototype.handleImageryMetadataResponse = function(response) {\n  if (response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  const resource = response.resourceSets[0].resources[0];\n  const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n  const sourceProjection = this.getProjection();\n  const extent = extentFromProjection(sourceProjection);\n  const tileSize = resource.imageWidth == resource.imageHeight ?\n    resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n  const tileGrid = createXYZ({\n    extent: extent,\n    minZoom: resource.zoomMin,\n    maxZoom: maxZoom,\n    tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n  });\n  this.tileGrid = tileGrid;\n\n  const culture = this.culture_;\n  const hidpi = this.hidpi_;\n  this.tileUrlFunction = createFromTileUrlFunctions(\n    resource.imageUrlSubdomains.map(function(subdomain) {\n      const quadKeyTileCoord = [0, 0, 0];\n      const imageUrl = resource.imageUrl\n        .replace('{subdomain}', subdomain)\n        .replace('{culture}', culture);\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        }\n      );\n    }));\n\n  if (resource.imageryProviders) {\n    const transform = getTransformFromProjections(\n      getProjection('EPSG:4326'), this.getProjection());\n\n    this.setAttributions(function(frameState) {\n      const attributions = [];\n      const zoom = frameState.viewState.zoom;\n      resource.imageryProviders.map(function(imageryProvider) {\n        let intersecting = false;\n        const coverageAreas = imageryProvider.coverageAreas;\n        for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n          const coverageArea = coverageAreas[i];\n          if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n            const bbox = coverageArea.bbox;\n            const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n            const extent = applyTransform(epsg4326Extent, transform);\n            if (intersects(extent, frameState.extent)) {\n              intersecting = true;\n              break;\n            }\n          }\n        }\n        if (intersecting) {\n          attributions.push(imageryProvider.attribution);\n        }\n      });\n\n      attributions.push(TOS_ATTRIBUTION);\n      return attributions;\n    });\n  }\n\n  this.setState(SourceState.READY);\n};\nexport default BingMaps;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/BingMaps.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../util.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/CartoDB\n */\nimport {inherits} from '../util.js';\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * {@link http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/}\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See {@link http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/}\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See {@link http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/}\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/CartoDB~Options=} options CartoDB options.\n * @api\n */\nconst CartoDB = function(options) {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.account_ = options.account;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.mapId_ = options.map || '';\n\n  /**\n   * @type {!Object}\n   * @private\n   */\n  this.config_ = options.config || {};\n\n  /**\n   * @type {!Object.<string, CartoDBLayerInfo>}\n   * @private\n   */\n  this.templateCache_ = {};\n\n  XYZ.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n    minZoom: options.minZoom,\n    projection: options.projection,\n    state: SourceState.LOADING,\n    wrapX: options.wrapX\n  });\n  this.initializeMap_();\n};\n\ninherits(CartoDB, XYZ);\n\n\n/**\n * Returns the current config.\n * @return {!Object} The current configuration.\n * @api\n */\nCartoDB.prototype.getConfig = function() {\n  return this.config_;\n};\n\n\n/**\n * Updates the carto db config.\n * @param {Object} config a key-value lookup. Values will replace current values\n *     in the config.\n * @api\n */\nCartoDB.prototype.updateConfig = function(config) {\n  assign(this.config_, config);\n  this.initializeMap_();\n};\n\n\n/**\n * Sets the CartoDB config\n * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n *     object.\n * If using named maps, a key-value lookup with the template parameters.\n * @api\n */\nCartoDB.prototype.setConfig = function(config) {\n  this.config_ = config || {};\n  this.initializeMap_();\n};\n\n\n/**\n * Issue a request to initialize the CartoDB map.\n * @private\n */\nCartoDB.prototype.initializeMap_ = function() {\n  const paramHash = JSON.stringify(this.config_);\n  if (this.templateCache_[paramHash]) {\n    this.applyTemplate_(this.templateCache_[paramHash]);\n    return;\n  }\n  let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n  if (this.mapId_) {\n    mapUrl += '/named/' + this.mapId_;\n  }\n\n  const client = new XMLHttpRequest();\n  client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n  client.addEventListener('error', this.handleInitError_.bind(this));\n  client.open('POST', mapUrl);\n  client.setRequestHeader('Content-type', 'application/json');\n  client.send(JSON.stringify(this.config_));\n};\n\n\n/**\n * Handle map initialization response.\n * @param {string} paramHash a hash representing the parameter set that was used\n *     for the request\n * @param {Event} event Event.\n * @private\n */\nCartoDB.prototype.handleInitResponse_ = function(paramHash, event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n    this.applyTemplate_(response);\n    this.templateCache_[paramHash] = response;\n    this.setState(SourceState.READY);\n  } else {\n    this.setState(SourceState.ERROR);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event Event.\n */\nCartoDB.prototype.handleInitError_ = function(event) {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * Apply the new tile urls returned by carto db\n * @param {CartoDBLayerInfo} data Result of carto db call.\n * @private\n */\nCartoDB.prototype.applyTemplate_ = function(data) {\n  const tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n      '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n  this.setUrl(tilesUrl);\n};\nexport default CartoDB;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/CartoDB.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid, inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * @constructor\n * @param {module:ol/source/Cluster~Options=} options Cluster options.\n * @extends {module:ol/source/Vector}\n * @api\n */\nconst Cluster = function(options) {\n  VectorSource.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.resolution = undefined;\n\n  /**\n   * @type {number}\n   * @protected\n   */\n  this.distance = options.distance !== undefined ? options.distance : 20;\n\n  /**\n   * @type {Array.<module:ol/Feature>}\n   * @protected\n   */\n  this.features = [];\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @return {module:ol/geom/Point} Cluster calculation point.\n   * @protected\n   */\n  this.geometryFunction = options.geometryFunction || function(feature) {\n    const geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n    assert(geometry instanceof Point,\n      10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n    return geometry;\n  };\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @protected\n   */\n  this.source = options.source;\n\n  listen(this.source, EventType.CHANGE, this.refresh, this);\n};\n\ninherits(Cluster, VectorSource);\n\n\n/**\n * Get the distance in pixels between clusters.\n * @return {number} Distance.\n * @api\n */\nCluster.prototype.getDistance = function() {\n  return this.distance;\n};\n\n\n/**\n * Get a reference to the wrapped source.\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nCluster.prototype.getSource = function() {\n  return this.source;\n};\n\n\n/**\n * @inheritDoc\n */\nCluster.prototype.loadFeatures = function(extent, resolution, projection) {\n  this.source.loadFeatures(extent, resolution, projection);\n  if (resolution !== this.resolution) {\n    this.clear();\n    this.resolution = resolution;\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n};\n\n\n/**\n * Set the distance in pixels between clusters.\n * @param {number} distance The distance in pixels.\n * @api\n */\nCluster.prototype.setDistance = function(distance) {\n  this.distance = distance;\n  this.refresh();\n};\n\n\n/**\n * handle the source changing\n * @override\n */\nCluster.prototype.refresh = function() {\n  this.clear();\n  this.cluster();\n  this.addFeatures(this.features);\n  VectorSource.prototype.refresh.call(this);\n};\n\n\n/**\n * @protected\n */\nCluster.prototype.cluster = function() {\n  if (this.resolution === undefined) {\n    return;\n  }\n  this.features.length = 0;\n  const extent = createEmpty();\n  const mapDistance = this.distance * this.resolution;\n  const features = this.source.getFeatures();\n\n  /**\n   * @type {!Object.<string, boolean>}\n   */\n  const clustered = {};\n\n  for (let i = 0, ii = features.length; i < ii; i++) {\n    const feature = features[i];\n    if (!(getUid(feature).toString() in clustered)) {\n      const geometry = this.geometryFunction(feature);\n      if (geometry) {\n        const coordinates = geometry.getCoordinates();\n        createOrUpdateFromCoordinate(coordinates, extent);\n        buffer(extent, mapDistance, extent);\n\n        let neighbors = this.source.getFeaturesInExtent(extent);\n        neighbors = neighbors.filter(function(neighbor) {\n          const uid = getUid(neighbor).toString();\n          if (!(uid in clustered)) {\n            clustered[uid] = true;\n            return true;\n          } else {\n            return false;\n          }\n        });\n        this.features.push(this.createCluster(neighbors));\n      }\n    }\n  }\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features\n * @return {module:ol/Feature} The cluster feature.\n * @protected\n */\nCluster.prototype.createCluster = function(features) {\n  const centroid = [0, 0];\n  for (let i = features.length - 1; i >= 0; --i) {\n    const geometry = this.geometryFunction(features[i]);\n    if (geometry) {\n      addCoordinate(centroid, geometry.getCoordinates());\n    } else {\n      features.splice(i, 1);\n    }\n  }\n  scaleCoordinate(centroid, 1 / features.length);\n\n  const cluster = new Feature(new Point(centroid));\n  cluster.set('features', features);\n  return cluster;\n};\nexport default Cluster;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Cluster.js\n// module id = null\n// module chunks = ","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n *\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nconst ReprojImage = function(sourceProj, targetProj,\n  targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  const maxTargetExtent = targetProj.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  const errorThresholdInPixels = ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n    sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  const sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {module:ol/ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  let state = ImageState.LOADED;\n\n  if (this.sourceImage_) {\n    state = ImageState.IDLE;\n  }\n\n  ImageBase.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\ninherits(ReprojImage, ImageBase);\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.disposeInternal = function() {\n  if (this.state == ImageState.LOADING) {\n    this.unlistenSource_();\n  }\n  ImageBase.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {module:ol/proj/Projection} Projection.\n */\nReprojImage.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.reproject_ = function() {\n  const sourceState = this.sourceImage_.getState();\n  if (sourceState == ImageState.LOADED) {\n    const width = getWidth(this.targetExtent_) / this.targetResolution_;\n    const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n      this.sourceImage_.getResolution(), this.maxSourceExtent_,\n      this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = listen(this.sourceImage_,\n        EventType.CHANGE, function(e) {\n          const sourceState = this.sourceImage_.getState();\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.unlistenSource_ = function() {\n  unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default ReprojImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/reproj/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Image} image The image.\n */\nconst ImageSourceEvent = function(type, image) {\n\n  Event.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {module:ol/Image}\n   * @api\n   */\n  this.image = image;\n\n};\ninherits(ImageSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Image~Options} options Single image source options.\n * @api\n */\nconst ImageSource = function(options) {\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {module:ol/reproj/Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\ninherits(ImageSource, Source);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\nImageSource.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\nImageSource.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    const idx = linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n */\nImageSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  const sourceProjection = this.getProjection();\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(\n            this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection, projection, extent, resolution, pixelRatio,\n      function(extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution,\n          pixelRatio, sourceProjection);\n      }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n * @protected\n */\nImageSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nImageSource.prototype.handleImageChange = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  switch (image.getState()) {\n    case ImageState.LOADING:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n          image));\n      break;\n    case ImageState.LOADED:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n          image));\n      break;\n    case ImageState.ERROR:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n          image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Image\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n */\nconst ImageWrapper = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(ImageWrapper, ImageBase);\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageWrapper.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageWrapper.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageWrapper.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\nImageWrapper.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\nImageWrapper.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageWrapper.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\nexport default ImageWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/uri.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageArcGISRest\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object.<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array.<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageArcGISRest~Options=} opt_options Image ArcGIS Rest Options.\n * @api\n */\nconst ImageArcGISRest = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageArcGISRest, ImageSource);\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageArcGISRest.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageArcGISRest.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n  pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)) {\n    return image;\n  }\n\n  const params = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  extent = extent.slice();\n  const centerX = (extent[0] + extent[2]) / 2;\n  const centerY = (extent[1] + extent[3]) / 2;\n  if (this.ratio_ != 1) {\n    const halfWidth = this.ratio_ * getWidth(extent) / 2;\n    const halfHeight = this.ratio_ * getHeight(extent) / 2;\n    extent[0] = centerX - halfWidth;\n    extent[1] = centerY - halfHeight;\n    extent[2] = centerX + halfWidth;\n    extent[3] = centerY + halfHeight;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  // Compute an integer width and height.\n  const width = Math.ceil(getWidth(extent) / imageResolution);\n  const height = Math.ceil(getHeight(extent) / imageResolution);\n\n  // Modify the extent to match the integer width and height.\n  extent[0] = centerX - imageResolution * width / 2;\n  extent[2] = centerX + imageResolution * width / 2;\n  extent[1] = centerY - imageResolution * height / 2;\n  extent[3] = centerY + imageResolution * height / 2;\n\n  this.imageSize_[0] = width;\n  this.imageSize_[1] = height;\n\n  const url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageArcGISRest.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageArcGISRest.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  const srid = projection.getCode().split(':').pop();\n\n  params['SIZE'] = size[0] + ',' + size[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(90 * pixelRatio);\n\n  const url = this.url_;\n\n  const modifiedUrl = url\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  if (modifiedUrl == url) {\n    assert(false, 50); // `options.featureTypes` should be an Array\n  }\n  return appendParams(modifiedUrl, params);\n};\n\n\n/**\n * Return the URL used for this ArcGIS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageArcGISRest.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageArcGISRest.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageArcGISRest.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageArcGISRest.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.image_ = null;\n  this.changed();\n};\nexport default ImageArcGISRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageArcGISRest.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageCanvas\n */\nimport {inherits} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageCanvas~Options=} options ImageCanvas options.\n * @api\n */\nconst ImageCanvasSource = function(options) {\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {module:ol/source/ImageCanvas~FunctionType}\n   */\n  this.canvasFunction_ = options.canvasFunction;\n\n  /**\n   * @private\n   * @type {module:ol/ImageCanvas}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ?\n    options.ratio : 1.5;\n\n};\n\ninherits(ImageCanvasSource, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nImageCanvasSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  resolution = this.findNearestResolution(resolution);\n\n  let canvas = this.canvas_;\n  if (canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)) {\n    return canvas;\n  }\n\n  extent = extent.slice();\n  scaleFromCenter(extent, this.ratio_);\n  const width = getWidth(extent) / resolution;\n  const height = getHeight(extent) / resolution;\n  const size = [width * pixelRatio, height * pixelRatio];\n\n  const canvasElement = this.canvasFunction_(\n    extent, resolution, pixelRatio, size, projection);\n  if (canvasElement) {\n    canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n  }\n  this.canvas_ = canvas;\n  this.renderedRevision_ = this.getRevision();\n\n  return canvas;\n};\nexport default ImageCanvasSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageCanvas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageMapGuide\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageMapGuide~Options=} options ImageMapGuide options.\n * @api\n */\nconst ImageMapGuide = function(options) {\n\n  ImageSource.call(this, {\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.displayDpi_ = options.displayDpi !== undefined ?\n    options.displayDpi : 96;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n    options.metersPerUnit : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useOverlay_ = options.useOverlay !== undefined ?\n    options.useOverlay : false;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n};\n\ninherits(ImageMapGuide, ImageSource);\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageMapGuide.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageMapGuide.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  resolution = this.findNearestResolution(resolution);\n  pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n  let image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)) {\n    return image;\n  }\n\n  if (this.ratio_ != 1) {\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n  }\n  const width = getWidth(extent) / resolution;\n  const height = getHeight(extent) / resolution;\n  const size = [width * pixelRatio, height * pixelRatio];\n\n  if (this.url_ !== undefined) {\n    const imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n      projection);\n    image = new ImageWrapper(extent, resolution, pixelRatio,\n      imageUrl, this.crossOrigin_,\n      this.imageLoadFunction_);\n    listen(image, EventType.CHANGE,\n      this.handleImageChange, this);\n  } else {\n    image = null;\n  }\n  this.image_ = image;\n  this.renderedRevision_ = this.getRevision();\n\n  return image;\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageMapGuide.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageMapGuide.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.changed();\n};\n\n\n/**\n * @param {string} baseUrl The mapagent url.\n * @param {Object.<string, string|number>} params Request parameters.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string} The mapagent map image request URL.\n */\nImageMapGuide.prototype.getUrl = function(baseUrl, params, extent, size, projection) {\n  const scale = getScale(extent, size,\n    this.metersPerUnit_, this.displayDpi_);\n  const center = getCenter(extent);\n  const baseParams = {\n    'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n    'VERSION': '2.0.0',\n    'LOCALE': 'en',\n    'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n    'CLIP': '1',\n    'SETDISPLAYDPI': this.displayDpi_,\n    'SETDISPLAYWIDTH': Math.round(size[0]),\n    'SETDISPLAYHEIGHT': Math.round(size[1]),\n    'SETVIEWSCALE': scale,\n    'SETVIEWCENTERX': center[0],\n    'SETVIEWCENTERY': center[1]\n  };\n  assign(baseParams, params);\n  return appendParams(baseUrl, baseParams);\n};\n\n\n/**\n * Set the image load function of the MapGuide source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageMapGuide.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\nexport default ImageMapGuide;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageMapGuide.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageStatic\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageStatic~Options=} options ImageStatic options.\n * @api\n */\nconst Static = function(options) {\n  const imageExtent = options.imageExtent;\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : null;\n\n  const /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n      options.imageLoadFunction !== undefined ?\n        options.imageLoadFunction : defaultImageLoadFunction;\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: getProjection(options.projection)\n  });\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = new ImageWrapper(imageExtent, undefined, 1, options.url, crossOrigin, imageLoadFunction);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n};\n\ninherits(Static, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  if (intersects(extent, this.image_.getExtent())) {\n    return this.image_;\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.handleImageChange = function(evt) {\n  if (this.image_.getState() == ImageState.LOADED) {\n    const imageExtent = this.image_.getExtent();\n    const image = this.image_.getImage();\n    let imageWidth, imageHeight;\n    if (this.imageSize_) {\n      imageWidth = this.imageSize_[0];\n      imageHeight = this.imageSize_[1];\n    } else {\n      imageWidth = image.width;\n      imageHeight = image.height;\n    }\n    const resolution = getHeight(imageExtent) / imageHeight;\n    const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n    if (targetWidth != imageWidth) {\n      const context = createCanvasContext2D(targetWidth, imageHeight);\n      const canvas = context.canvas;\n      context.drawImage(image, 0, 0, imageWidth, imageHeight,\n        0, 0, canvas.width, canvas.height);\n      this.image_.setImage(canvas);\n    }\n  }\n  ImageSource.prototype.handleImageChange.call(this, evt);\n};\nexport default Static;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageStatic.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/WMSServerType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    GETFEATUREINFO_IMAGE_SIZE);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, GETFEATUREINFO_IMAGE_SIZE,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/common.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../util.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Raster\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Object} data An object made available to operations.\n */\nconst RasterSourceEvent = function(type, frameState, data) {\n  Event.call(this, type);\n\n  /**\n   * The raster extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = frameState.extent;\n\n  /**\n   * The pixel resolution (map units per pixel).\n   * @type {number}\n   * @api\n   */\n  this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n  /**\n   * An object made available to all operations.  This can be used by operations\n   * as a storage object (e.g. for calculating statistics).\n   * @type {Object}\n   * @api\n   */\n  this.data = data;\n\n};\ninherits(RasterSourceEvent, Event);\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @fires ol/source/Raster~RasterSourceEvent\n * @param {module:ol/source/Raster~Options=} options Options.\n * @api\n */\nconst RasterSource = function(options) {\n\n  /**\n   * @private\n   * @type {*}\n   */\n  this.worker_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Raster~RasterOperationType}\n   */\n  this.operationType_ = options.operationType !== undefined ?\n    options.operationType : RasterOperationType.PIXEL;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/canvas/Layer>}\n   */\n  this.renderers_ = createRenderers(options.sources);\n\n  for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n    listen(this.renderers_[r], EventType.CHANGE,\n      this.changed, this);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    function() {\n      return 1;\n    },\n    this.changed.bind(this));\n\n  const layerStatesArray = getLayerStatesArray(this.renderers_);\n  const layerStates = {};\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n  }\n\n  /**\n   * The most recently requested frame state.\n   * @type {module:ol/PluggableMap~FrameState}\n   * @private\n   */\n  this.requestedFrameState_;\n\n  /**\n   * The most recently rendered image canvas.\n   * @type {module:ol/ImageCanvas}\n   * @private\n   */\n  this.renderedImageCanvas_ = null;\n\n  /**\n   * The most recently rendered revision.\n   * @type {number}\n   */\n  this.renderedRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = {\n    animate: false,\n    coordinateToPixelTransform: createTransform(),\n    extent: null,\n    focus: null,\n    index: 0,\n    layerStates: layerStates,\n    layerStatesArray: layerStatesArray,\n    pixelRatio: 1,\n    pixelToCoordinateTransform: createTransform(),\n    postRenderFunctions: [],\n    size: [0, 0],\n    skippedFeatureUids: {},\n    tileQueue: this.tileQueue_,\n    time: Date.now(),\n    usedTiles: {},\n    viewState: /** @type {module:ol/View~State} */ ({\n      rotation: 0\n    }),\n    viewHints: [],\n    wantedTiles: {}\n  };\n\n  ImageSource.call(this, {});\n\n  if (options.operation !== undefined) {\n    this.setOperation(options.operation, options.lib);\n  }\n\n};\n\ninherits(RasterSource, ImageSource);\n\n\n/**\n * Set the operation.\n * @param {module:ol/source/Raster~Operation} operation New operation.\n * @param {Object=} opt_lib Functions that will be available to operations run\n *     in a worker.\n * @api\n */\nRasterSource.prototype.setOperation = function(operation, opt_lib) {\n  this.worker_ = new Processor({\n    operation: operation,\n    imageOps: this.operationType_ === RasterOperationType.IMAGE,\n    queue: 1,\n    lib: opt_lib,\n    threads: this.threads_\n  });\n  this.changed();\n};\n\n\n/**\n * Update the stored frame state.\n * @param {module:ol/extent~Extent} extent The view extent (in map units).\n * @param {number} resolution The view resolution.\n * @param {module:ol/proj/Projection} projection The view projection.\n * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n * @private\n */\nRasterSource.prototype.updateFrameState_ = function(extent, resolution, projection) {\n\n  const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n  frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n  const center = getCenter(extent);\n\n  frameState.extent = extent.slice();\n  frameState.focus = center;\n  frameState.size[0] = Math.round(getWidth(extent) / resolution);\n  frameState.size[1] = Math.round(getHeight(extent) / resolution);\n  frameState.time = Date.now();\n  frameState.animate = false;\n\n  const viewState = frameState.viewState;\n  viewState.center = center;\n  viewState.projection = projection;\n  viewState.resolution = resolution;\n  return frameState;\n};\n\n\n/**\n * Determine if all sources are ready.\n * @return {boolean} All sources are ready.\n * @private\n */\nRasterSource.prototype.allSourcesReady_ = function() {\n  let ready = true;\n  let source;\n  for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n    source = this.renderers_[i].getLayer().getSource();\n    if (source.getState() !== SourceState.READY) {\n      ready = false;\n      break;\n    }\n  }\n  return ready;\n};\n\n\n/**\n * @inheritDoc\n */\nRasterSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  if (!this.allSourcesReady_()) {\n    return null;\n  }\n\n  const frameState = this.updateFrameState_(extent, resolution, projection);\n  this.requestedFrameState_ = frameState;\n\n  // check if we can't reuse the existing ol/ImageCanvas\n  if (this.renderedImageCanvas_) {\n    const renderedResolution = this.renderedImageCanvas_.getResolution();\n    const renderedExtent = this.renderedImageCanvas_.getExtent();\n    if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n      this.renderedImageCanvas_ = null;\n    }\n  }\n\n  if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n    this.processSources_();\n  }\n\n  frameState.tileQueue.loadMoreTiles(16, 16);\n\n  if (frameState.animate) {\n    requestAnimationFrame(this.changed.bind(this));\n  }\n\n  return this.renderedImageCanvas_;\n};\n\n\n/**\n * Start processing source data.\n * @private\n */\nRasterSource.prototype.processSources_ = function() {\n  const frameState = this.requestedFrameState_;\n  const len = this.renderers_.length;\n  const imageDatas = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const imageData = getImageData(\n      this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n    if (imageData) {\n      imageDatas[i] = imageData;\n    } else {\n      return;\n    }\n  }\n\n  const data = {};\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n  this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n};\n\n\n/**\n * Called when pixel processing is complete.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Error} err Any error during processing.\n * @param {ImageData} output The output image data.\n * @param {Object} data The user data.\n * @private\n */\nRasterSource.prototype.onWorkerComplete_ = function(frameState, err, output, data) {\n  if (err || !output) {\n    return;\n  }\n\n  // do nothing if extent or resolution changed\n  const extent = frameState.extent;\n  const resolution = frameState.viewState.resolution;\n  if (resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)) {\n    return;\n  }\n\n  let context;\n  if (this.renderedImageCanvas_) {\n    context = this.renderedImageCanvas_.getImage().getContext('2d');\n  } else {\n    const width = Math.round(getWidth(extent) / resolution);\n    const height = Math.round(getHeight(extent) / resolution);\n    context = createCanvasContext2D(width, height);\n    this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n  }\n  context.putImageData(output, 0, 0);\n\n  this.changed();\n  this.renderedRevision_ = this.getRevision();\n\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n};\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\n/**\n * @override\n */\nRasterSource.prototype.getImageInternal = function() {\n  return null; // not implemented\n};\n\n\nexport default RasterSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Raster.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../util.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/Stamen~Options=} options Stamen options.\n * @api\n */\nconst Stamen = function(options) {\n  const i = options.layer.indexOf('-');\n  const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  const providerConfig = ProviderConfig[provider];\n\n  const layerConfig = LayerConfig[options.layer];\n\n  const url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\nexport default Stamen;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Stamen.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileArcGISRest\n */\nimport {inherits} from '../util.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image}\n * for more detail.\n * @property {Object.<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array.<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileArcGISRest~Options=} opt_options Tile ArcGIS Rest options.\n * @api\n */\nconst TileArcGISRest = function(opt_options) {\n\n  const options = opt_options || {};\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.setKey(this.getKeyForParams_());\n};\n\ninherits(TileArcGISRest, TileImage);\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileArcGISRest.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileArcGISRest.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileArcGISRest.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  const srid = projection.getCode().split(':').pop();\n\n  params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n  params['BBOX'] = tileExtent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n  );\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n\n  const modifiedUrl = url\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileArcGISRest.prototype.getTilePixelRatio = function(pixelRatio) {\n  return /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n */\nTileArcGISRest.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  const tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  const baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileArcGISRest.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.setKey(this.getKeyForParams_());\n};\nexport default TileArcGISRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileArcGISRest.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileDebug\n */\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {string} text Text.\n */\nconst LabeledTile = function(tileCoord, tileSize, text) {\n\n  Tile.call(this, tileCoord, TileState.LOADED);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tileSize_ = tileSize;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = text;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n};\ninherits(LabeledTile, Tile);\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLCanvasElement} Image.\n */\nLabeledTile.prototype.getImage = function() {\n  if (this.canvas_) {\n    return this.canvas_;\n  } else {\n    const tileSize = this.tileSize_;\n    const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n    context.strokeStyle = 'black';\n    context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n    context.fillStyle = 'black';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.font = '24px sans-serif';\n    context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n    this.canvas_ = context.canvas;\n    return context.canvas;\n  }\n};\n\n\n/**\n * @override\n */\nLabeledTile.prototype.load = function() {};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n *\n * @constructor\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/TileDebug~Options=} options Debug tile options.\n * @api\n */\nconst TileDebug = function(options) {\n\n  TileSource.call(this, {\n    opaque: false,\n    projection: options.projection,\n    tileGrid: options.tileGrid,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n};\n\ninherits(TileDebug, TileSource);\n\n\n/**\n * @inheritDoc\n */\nTileDebug.prototype.getTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n  } else {\n    const tileSize = toSize(this.tileGrid.getTileSize(z));\n    const tileCoord = [z, x, y];\n    const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n    const text = !textTileCoord ? '' :\n      this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n    const tile = new LabeledTile(tileCoord, tileSize, text);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\nexport default TileDebug;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileDebug.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * @see http://mapbox.com/developers/api/\n */\n\nimport {inherits} from '../util.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileJSON~Options=} options TileJSON options.\n * @api\n */\nconst TileJSON = function(options) {\n\n  /**\n   * @type {TileJSON}\n   * @private\n   */\n  this.tileJSON_ = null;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  if (options.url) {\n    if (options.jsonp) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n\n};\n\ninherits(TileJSON, TileImage);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nTileJSON.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nTileJSON.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * @return {TileJSON} The tilejson object.\n * @api\n */\nTileJSON.prototype.getTileJSON = function() {\n  return this.tileJSON_;\n};\n\n\n/**\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nTileJSON.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n  if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n\n  }\n  this.tileJSON_ = tileJSON;\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @protected\n */\nTileJSON.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\nexport default TileJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileWMS~Options=} [opt_options] Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/TileWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/UTFGrid\n */\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {module:ol/extent~Extent} extent Extent of the tile.\n * @param {boolean} preemptive Load the tile when visible (before it's needed).\n * @param {boolean} jsonp Load the tile as a script.\n */\nexport const CustomTile = function(tileCoord, state, src, extent, preemptive, jsonp) {\n\n  Tile.call(this, tileCoord, state);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.preemptive_ = preemptive;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.grid_ = null;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.keys_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, Object>|undefined}\n   */\n  this.data_ = null;\n\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.jsonp_ = jsonp;\n\n};\ninherits(CustomTile, Tile);\n\n\n/**\n * Get the image element for this tile.\n * @return {Image} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  const xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  const yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  let code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  let data = null;\n  if (code in this.keys_) {\n    const id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UTFGrid~Options=} options Source options.\n * @api\n */\nconst UTFGrid = function(options) {\n  TileSource.call(this, {\n    projection: getProjection('EPSG:3857'),\n    state: SourceState.LOADING\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.preemptive_ = options.preemptive !== undefined ?\n    options.preemptive : true;\n\n  /**\n   * @private\n   * @type {!module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction_ = nullTileUrlFunction;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.template_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.jsonp_ = options.jsonp || false;\n\n  if (options.url) {\n    if (this.jsonp_) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n};\n\ninherits(UTFGrid, TileSource);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    const tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  const grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/UTFGrid.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP',  // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/WMTSRequestEncoding.js\n// module id = null\n// module chunks = ","/**\n * @module ol/tilegrid/WMTS\n */\nimport {inherits} from '../util.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n *\n * @constructor\n * @extends {module:ol/tilegrid/TileGrid}\n * @param {module:ol/tilegrid/WMTS~Options} options WMTS options.\n * @struct\n * @api\n */\nconst WMTSTileGrid = function(options) {\n  /**\n   * @private\n   * @type {!Array.<string>}\n   */\n  this.matrixIds_ = options.matrixIds;\n  // FIXME: should the matrixIds become optional?\n\n  TileGrid.call(this, {\n    extent: options.extent,\n    origin: options.origin,\n    origins: options.origins,\n    resolutions: options.resolutions,\n    tileSize: options.tileSize,\n    tileSizes: options.tileSizes,\n    sizes: options.sizes\n  });\n};\n\ninherits(WMTSTileGrid, TileGrid);\n\n\n/**\n * @param {number} z Z.\n * @return {string} MatrixId..\n */\nWMTSTileGrid.prototype.getMatrixId = function(z) {\n  return this.matrixIds_[z];\n};\n\n\n/**\n * Get the list of matrix identifiers.\n * @return {Array.<string>} MatrixIds.\n * @api\n */\nWMTSTileGrid.prototype.getMatrixIds = function() {\n  return this.matrixIds_;\n};\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  const resolutions = [];\n  /** @type {!Array.<string>} */\n  const matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  const origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/tilegrid/WMTS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/WMTS\n */\nimport {inherits} from '../util.js';\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/WMTS~Options=} options WMTS options.\n * @api\n */\nconst WMTS = function(options) {\n\n  // TODO: add support for TileMatrixLimits\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layer_ = options.layer;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.matrixSet_ = options.matrixSet;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.style_ = options.style;\n\n  let urls = options.urls;\n  if (urls === undefined && options.url !== undefined) {\n    urls = expandUrl(options.url);\n  }\n\n  // FIXME: should we guess this requestEncoding from options.url(s)\n  //        structure? that would mean KVP only if a template is not provided.\n\n  /**\n   * @private\n   * @type {module:ol/source/WMTSRequestEncoding}\n   */\n  this.requestEncoding_ = options.requestEncoding !== undefined ?\n    /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n    WMTSRequestEncoding.KVP;\n\n  const requestEncoding = this.requestEncoding_;\n\n  // FIXME: should we create a default tileGrid?\n  // we could issue a getCapabilities xhr to retrieve missing configuration\n  const tileGrid = options.tileGrid;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  const dimensions = this.dimensions_;\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   * @private\n   */\n  this.createFromWMTSTemplate_ = function(template) {\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n      appendParams(template, context) :\n      template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n        return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n      });\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': -tileCoord[2] - 1\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  };\n\n  const tileUrlFunction = (urls && urls.length > 0) ?\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_)) : nullTileUrlFunction;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: tileUrlFunction,\n    urls: urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : false,\n    transition: options.transition\n  });\n\n  this.setKey(this.getKeyForDimensions_());\n\n};\n\ninherits(WMTS, TileImage);\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\nexport default WMTS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/WMTS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageTile}\n * @param {module:ol/tilegrid/TileGrid} tileGrid TileGrid that the tile belongs to.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nexport const CustomTile = function(\n  tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n   */\n  this.zoomifyImage_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n};\ninherits(CustomTile, ImageTile);\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getImage = function() {\n  if (this.zoomifyImage_) {\n    return this.zoomifyImage_;\n  }\n  const image = ImageTile.prototype.getImage.call(this);\n  if (this.state == TileState.LOADED) {\n    const tileSize = this.tileSize_;\n    if (image.width == tileSize[0] && image.height == tileSize[1]) {\n      this.zoomifyImage_ = image;\n      return image;\n    } else {\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n  } else {\n    return image;\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/Zoomify~Options=} opt_options Options.\n * @api\n */\nconst Zoomify = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const size = options.size;\n  const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n    options.tierSizeCalculation :\n    TierSizeCalculation.DEFAULT;\n\n  const imageWidth = size[0];\n  const imageHeight = size[1];\n  const extent = options.extent || [0, -size[1], size[0], 0];\n  const tierSizeInTiles = [];\n  const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n  let tileSizeForTierSizeCalculation = tileSize;\n\n  switch (tierSizeCalculation) {\n    case TierSizeCalculation.DEFAULT:\n      while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n        tierSizeInTiles.push([\n          Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n          Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n        ]);\n        tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n      }\n      break;\n    case TierSizeCalculation.TRUNCATED:\n      let width = imageWidth;\n      let height = imageHeight;\n      while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n        tierSizeInTiles.push([\n          Math.ceil(width / tileSizeForTierSizeCalculation),\n          Math.ceil(height / tileSizeForTierSizeCalculation)\n        ]);\n        width >>= 1;\n        height >>= 1;\n      }\n      break;\n    default:\n      assert(false, 53); // Unknown `tierSizeCalculation` configured\n      break;\n  }\n\n  tierSizeInTiles.push([1, 1]);\n  tierSizeInTiles.reverse();\n\n  const resolutions = [1];\n  const tileCountUpToTier = [0];\n  for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n    resolutions.push(1 << i);\n    tileCountUpToTier.push(\n      tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n        tileCountUpToTier[i - 1]\n    );\n  }\n  resolutions.reverse();\n\n  const tileGrid = new TileGrid({\n    tileSize: tileSize,\n    extent: extent,\n    origin: getTopLeft(extent),\n    resolutions: resolutions\n  });\n\n  let url = options.url;\n  if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n    url += '{TileGroup}/{z}-{x}-{y}.jpg';\n  }\n  const urls = expandUrl(url);\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   */\n  function createFromTemplate(template) {\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const tileCoordZ = tileCoord[0];\n          const tileCoordX = tileCoord[1];\n          const tileCoordY = -tileCoord[2] - 1;\n          const tileIndex =\n              tileCoordX +\n              tileCoordY * tierSizeInTiles[tileCoordZ][0];\n          const tileSize = tileGrid.getTileSize(tileCoordZ);\n          const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n          const localContext = {\n            'z': tileCoordZ,\n            'x': tileCoordX,\n            'y': tileCoordY,\n            'tileIndex': tileIndex,\n            'TileGroup': 'TileGroup' + tileGroup\n          };\n          return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n      }\n    );\n  }\n\n  const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n  const ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: ZoomifyTileClass,\n    tileGrid: tileGrid,\n    tileUrlFunction: tileUrlFunction,\n    transition: options.transition\n  });\n\n};\n\ninherits(Zoomify, TileImage);\n\n\nexport default Zoomify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/source/Zoomify.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Atlas.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/AtlasManager.js\n// module id = null\n// module chunks = ","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ol/style/Text.js\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div id=\"map\"></div>\n    {{name}}\n    <form class=\"form-inline\">\n      <label>Measurement type &nbsp;</label>\n      <select id=\"type\">\n        <option value=\"length\">Length (LineString)</option>\n        <option value=\"area\">Area (Polygon)</option>\n      </select>\n    </form>\n  </div>\n</template>\n\n<script>\nimport(\"ol/ol.css\");\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport Overlay from \"ol/Overlay\";\nimport { unByKey } from \"ol/Observable.js\";\nimport { LineString, Polygon } from \"ol/geom.js\";\nimport { getArea, getLength } from \"ol/sphere.js\";\nimport Draw from \"ol/interaction/Draw.js\";\nimport { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer.js\";\nimport { OSM, Vector as VectorSource } from \"ol/source\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style.js\";\nexport default {\n  data() {\n    return {\n      name: \"openlayer\"\n    };\n  },\n  methods: {\n    initMap: function() {\n      // this.map = new Map({\n      //   target: \"map\",\n      //   layers: [\n      //     new TileLayer({\n      //       source: new OSM()\n      //     })\n      //   ],\n      //   view: new View({\n      //     center: [-11000000, 4600000],\n      //     zoom: 15\n      //   })\n      // });\n      // console.log(this.map);\n\n      var raster = new TileLayer({\n        source: new OSM()\n      });\n\n      var source = new VectorSource();\n\n      var vector = new VectorLayer({\n        source: source,\n        style: new Style({\n          fill: new Fill({\n            color: \"rgba(255, 255, 255, 0.2)\"\n          }),\n          stroke: new Stroke({\n            color: \"#ffcc33\",\n            width: 2\n          }),\n          image: new CircleStyle({\n            radius: 7,\n            fill: new Fill({\n              color: \"#ffcc33\"\n            })\n          })\n        })\n      });\n\n      /**\n       * Currently drawn feature.\n       * @type {module:ol/Feature~Feature}\n       */\n      var sketch;\n\n      /**\n       * The help tooltip element.\n       * @type {Element}\n       */\n      var helpTooltipElement;\n\n      /**\n       * Overlay to show the help messages.\n       * @type {module:ol/Overlay}\n       */\n      var helpTooltip;\n\n      /**\n       * The measure tooltip element.\n       * @type {Element}\n       */\n      var measureTooltipElement;\n\n      /**\n       * Overlay to show the measurement.\n       * @type {module:ol/Overlay}\n       */\n      var measureTooltip;\n\n      /**\n       * Message to show when the user is drawing a polygon.\n       * @type {string}\n       */\n      var continuePolygonMsg = \"单击继续绘制面\";\n\n      /**\n       * Message to show when the user is drawing a line.\n       * @type {string}\n       */\n      var continueLineMsg = \"单击继续绘制线\";\n\n      /**\n       * Handle pointer move.\n       * @param {module:ol/MapBrowserEvent~MapBrowserEvent} evt The event.\n       */\n      var pointerMoveHandler = function(evt) {\n        if (evt.dragging) {\n          return;\n        }\n        /** @type {string} */\n        var helpMsg = \"点击开始绘制\";\n\n        if (sketch) {\n          var geom = sketch.getGeometry();\n          if (geom instanceof Polygon) {\n            helpMsg = continuePolygonMsg;\n          } else if (geom instanceof LineString) {\n            helpMsg = continueLineMsg;\n          }\n        }\n\n        helpTooltipElement.innerHTML = helpMsg;\n        helpTooltip.setPosition(evt.coordinate);\n\n        helpTooltipElement.classList.remove(\"hidden\");\n      };\n\n      var map = new Map({\n        layers: [raster, vector],\n        target: \"map\",\n        view: new View({\n          center: [-11000000, 4600000],\n          zoom: 15\n        })\n      });\n\n      map.on(\"pointermove\", pointerMoveHandler);\n\n      map.getViewport().addEventListener(\"mouseout\", function() {\n        helpTooltipElement.classList.add(\"hidden\");\n      });\n\n      var typeSelect = document.getElementById(\"type\");\n\n      var draw; // global so we can remove it later\n\n      /**\n       * Format length output.\n       * @param {module:ol/geom/LineString~LineString} line The line.\n       * @return {string} The formatted length.\n       */\n      var formatLength = function(line) {\n        var length = getLength(line);\n        var output;\n        if (length > 100) {\n          output = Math.round(length / 1000 * 100) / 100 + \" \" + \"km\";\n        } else {\n          output = Math.round(length * 100) / 100 + \" \" + \"m\";\n        }\n        return output;\n      };\n\n      /**\n       * Format area output.\n       * @param {module:ol/geom/Polygon~Polygon} polygon The polygon.\n       * @return {string} Formatted area.\n       */\n      var formatArea = function(polygon) {\n        var area = getArea(polygon);\n        var output;\n        if (area > 10000) {\n          output =\n            Math.round(area / 1000000 * 100) / 100 + \" \" + \"km<sup>2</sup>\";\n        } else {\n          output = Math.round(area * 100) / 100 + \" \" + \"m<sup>2</sup>\";\n        }\n        return output;\n      };\n\n      function addInteraction() {\n        var type = typeSelect.value == \"area\" ? \"Polygon\" : \"LineString\";\n        draw = new Draw({\n          source: source,\n          type: type,\n          style: new Style({\n            fill: new Fill({\n              color: \"rgba(255, 255, 255, 0.2)\"\n            }),\n            stroke: new Stroke({\n              color: \"rgba(0, 0, 0, 0.5)\",\n              lineDash: [10, 10],\n              width: 2\n            }),\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: \"rgba(0, 0, 0, 0.7)\"\n              }),\n              fill: new Fill({\n                color: \"rgba(255, 255, 255, 0.2)\"\n              })\n            })\n          })\n        });\n        map.addInteraction(draw);\n\n        createMeasureTooltip();\n        createHelpTooltip();\n\n        var listener;\n        draw.on(\n          \"drawstart\",\n          function(evt) {\n            // set sketch\n            sketch = evt.feature;\n\n            /** @type {module:ol/coordinate~Coordinate|undefined} */\n            var tooltipCoord = evt.coordinate;\n\n            listener = sketch.getGeometry().on(\"change\", function(evt) {\n              var geom = evt.target;\n              var output;\n              if (geom instanceof Polygon) {\n                output = formatArea(geom);\n                tooltipCoord = geom.getInteriorPoint().getCoordinates();\n              } else if (geom instanceof LineString) {\n                output = formatLength(geom);\n                tooltipCoord = geom.getLastCoordinate();\n              }\n              measureTooltipElement.innerHTML = output;\n              measureTooltip.setPosition(tooltipCoord);\n            });\n          },\n          this\n        );\n\n        draw.on(\n          \"drawend\",\n          function() {\n            measureTooltipElement.className = \"tooltip tooltip-static\";\n            measureTooltip.setOffset([0, -7]);\n            // unset sketch\n            sketch = null;\n            // unset tooltip so that a new one can be created\n            measureTooltipElement = null;\n            createMeasureTooltip();\n            unByKey(listener);\n          },\n          this\n        );\n      }\n\n      /**\n       * Creates a new help tooltip\n       */\n      function createHelpTooltip() {\n        if (helpTooltipElement) {\n          helpTooltipElement.parentNode.removeChild(helpTooltipElement);\n        }\n        helpTooltipElement = document.createElement(\"div\");\n        helpTooltipElement.className = \"tooltip hidden\";\n        helpTooltip = new Overlay({\n          element: helpTooltipElement,\n          offset: [15, 0],\n          positioning: \"center-left\"\n        });\n        map.addOverlay(helpTooltip);\n      }\n\n      /**\n       * Creates a new measure tooltip\n       */\n      function createMeasureTooltip() {\n        if (measureTooltipElement) {\n          measureTooltipElement.parentNode.removeChild(measureTooltipElement);\n        }\n        measureTooltipElement = document.createElement(\"div\");\n        measureTooltipElement.className = \"tooltip tooltip-measure\";\n        measureTooltip = new Overlay({\n          element: measureTooltipElement,\n          offset: [0, -15],\n          positioning: \"bottom-center\"\n        });\n        map.addOverlay(measureTooltip);\n      }\n\n      /**\n       * Let user change the geometry type.\n       */\n      typeSelect.onchange = function() {\n        map.removeInteraction(draw);\n        addInteraction();\n      };\n      addInteraction();\n    }\n  },\n  mounted() {\n    this.initMap();\n  }\n};\n</script>\n<style>\n#map {\n  width: 100%;\n  height: 80vh;\n}\n.tooltip {\n  position: relative;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  color: white;\n  padding: 4px 8px;\n  opacity: 0.7;\n  white-space: nowrap;\n}\n.tooltip-measure {\n  opacity: 1;\n  font-weight: bold;\n}\n.tooltip-static {\n  background-color: #ffcc33;\n  color: black;\n  border: 1px solid white;\n}\n.tooltip-measure:before,\n.tooltip-static:before {\n  border-top: 6px solid rgba(0, 0, 0, 0.5);\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  content: \"\";\n  position: absolute;\n  bottom: -6px;\n  margin-left: -7px;\n  left: 50%;\n}\n.tooltip-static:before {\n  border-top-color: #ffcc33;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/map/openlayer/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{attrs:{\"id\":\"map\"}}),_vm._v(\"\\n  \"+_vm._s(_vm.name)+\"\\n  \"),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form',{staticClass:\"form-inline\"},[_c('label',[_vm._v(\"Measurement type  \")]),_vm._v(\" \"),_c('select',{attrs:{\"id\":\"type\"}},[_c('option',{attrs:{\"value\":\"length\"}},[_vm._v(\"Length (LineString)\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"area\"}},[_vm._v(\"Area (Polygon)\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-08bb5c51\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/map/openlayer/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-08bb5c51\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-08bb5c51\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/map/openlayer/index.vue\n// module id = null\n// module chunks = ","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rbush/index.js\n// module id = emf4\n// module chunks = 5","var Processor = require('./processor');\n\nexports.Processor = Processor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pixelworks/lib/index.js\n// module id = tEVf\n// module chunks = 5","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pixelworks/lib/processor.js\n// module id = xwVt\n// module chunks = 5"],"sourceRoot":""}